# Generated by Django 5.2 on 2025-06-12 18:38

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Assignment', max_length=250)),
                ('subject', models.CharField(max_length=250)),
                ('issue_date', models.DateTimeField()),
                ('submission_date', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('start_date', models.DateField()),
                ('deadline', models.DateField()),
                ('description', models.TextField()),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Time_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=200)),
                ('class_name', models.TextField(default='Break')),
                ('subject_teacher', models.CharField(blank=True, max_length=250, null=True)),
                ('class_no', models.IntegerField()),
                ('class_room_no', models.CharField(max_length=100)),
                ('start_time', models.CharField(choices=[('08:30', '08:30'), ('09:30', '09:30'), ('10:30', '10:30'), ('11:30', '11:30'), ('12:30', '12:30'), ('13:30', '13:30'), ('14:30', '14:30')], max_length=200)),
                ('end_time', models.CharField(choices=[('09:30', '09:30'), ('10:30', '10:30'), ('11:30', '11:30'), ('12:30', '12:30'), ('13:30', '13:30'), ('14:30', '14:30'), ('15:30', '15:30')], max_length=200)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('present', models.BooleanField(default=False)),
                ('time_table_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Schedulair_app.time_table')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=225)),
                ('email', models.EmailField(max_length=250, unique=True)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('user', 'user')], max_length=30)),
                ('user_created_at', models.DateTimeField(auto_now_add=True)),
                ('password', models.CharField(max_length=250)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
